import os
import json
import getpass
import requests
import platform
import psutil


def get_system_info():
    _data = {"System": []}
    _data["System"].append({"Username": getpass.getuser()})
    _data["System"].append({"Hostname": platform.node()}) # os.environ["COMPUTERNAME"]
    _data["System"].append({"OS": platform.system()}) 
    _data["System"].append({"FullVersion": platform.platform()}) 
    return _data

def get_size(bytes, suffix="B"):
    """
    Scale bytes to its proper format
    e.g:
        1253656 => '1.20MB'
        1253656678 => '1.17GB'
    """
    factor = 1024
    for unit in ["", "K", "M", "G", "T", "P"]:
        if bytes < factor:
            return f"{bytes:.2f}{unit}{suffix}"
        bytes /= factor
        
def get_hardware_info():
    uname = platform.uname()
    cpufreq = psutil.cpu_freq()
    svmem = psutil.virtual_memory()
    _data = {"Hardware": []}
    _data["Hardware"].append({"Processor": uname.processor})
    _data["Hardware"].append({"Physical cores": psutil.cpu_count(logical=False)})
    _data["Hardware"].append({"Total cores": psutil.cpu_count(logical=True)})
    _data["Hardware"].append({"Max Frequency (Mhz)": cpufreq.max})
    _data["Hardware"].append({"Min Frequency (Mhz)": cpufreq.min})
    _data["Hardware"].append({"RAM": get_size(svmem.total)})
    return _data

def main():
    data = {"data":[]}
    data["data"].append(get_system_info())
    data["data"].append(get_hardware_info())
    


    print(json.dumps(data, indent=4))    
    
    
if __name__ == '__main__':
    main()